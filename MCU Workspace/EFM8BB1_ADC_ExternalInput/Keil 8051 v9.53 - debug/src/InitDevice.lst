C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\SiliconLabs\S
                    -implicityStudio\v4\developer\sdks\8051\v4.0.3\examples\EFM8BB1_SLSTK2020A\ADC\ExternalInput\src\InitDevice.c OMF2 SMALL 
                    -DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMO
                    -TE INCDIR(C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\8051\v4.0.3\examples\EFM8BB1_SLSTK2020A\ADC\ExternalInput\in
                    -c;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_retargetserial;C:/SiliconLabs/
                    -SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sd
                    -ks/8051/v4.0.3//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevi
                    -ce.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              ADC_0_enter_DefaultMode_from_RESET();
  29   1              VREF_0_enter_DefaultMode_from_RESET();
  30   1              CLOCK_0_enter_DefaultMode_from_RESET();
  31   1              TIMER01_0_enter_DefaultMode_from_RESET();
  32   1              TIMER16_2_enter_DefaultMode_from_RESET();
  33   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  34   1              UART_0_enter_DefaultMode_from_RESET();
  35   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  36   1              // [Config Calls]$
  37   1      
  38   1      }
  39          
  40          //================================================================================
  41          // WDT_0_enter_DefaultMode_from_RESET
  42          //================================================================================
  43          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  44   1              // $[WDTCN - Watchdog Timer Control]
  45   1              //Disable Watchdog with key sequence
  46   1              WDTCN = 0xDE; //First key
  47   1              WDTCN = 0xAD; //Second key
  48   1              // [WDTCN - Watchdog Timer Control]$
  49   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 2   

  50   1      }
  51          
  52          //================================================================================
  53          // PORTS_0_enter_DefaultMode_from_RESET
  54          //================================================================================
  55          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  56   1              // $[P0 - Port 0 Pin Latch]
  57   1              // [P0 - Port 0 Pin Latch]$
  58   1      
  59   1              // $[P0MDOUT - Port 0 Output Mode]
  60   1              /***********************************************************************
  61   1               - P0.0 output is open-drain
  62   1               - P0.1 output is open-drain
  63   1               - P0.2 output is open-drain
  64   1               - P0.3 output is open-drain
  65   1               - P0.4 output is push-pull
  66   1               - P0.5 output is open-drain
  67   1               - P0.6 output is open-drain
  68   1               - P0.7 output is open-drain
  69   1               ***********************************************************************/
  70   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  71   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  72   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  73   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  74   1              // [P0MDOUT - Port 0 Output Mode]$
  75   1      
  76   1              // $[P0MDIN - Port 0 Input Mode]
  77   1              /***********************************************************************
  78   1               - P0.0 pin is configured for analog mode
  79   1               - P0.1 pin is configured for digital mode
  80   1               - P0.2 pin is configured for digital mode
  81   1               - P0.3 pin is configured for digital mode
  82   1               - P0.4 pin is configured for digital mode
  83   1               - P0.5 pin is configured for digital mode
  84   1               - P0.6 pin is configured for digital mode
  85   1               - P0.7 pin is configured for digital mode
  86   1               ***********************************************************************/
  87   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
  88   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
  89   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
  90   1              // [P0MDIN - Port 0 Input Mode]$
  91   1      
  92   1              // $[P0SKIP - Port 0 Skip]
  93   1              /***********************************************************************
  94   1               - P0.0 pin is skipped by the crossbar
  95   1               - P0.1 pin is not skipped by the crossbar
  96   1               - P0.2 pin is not skipped by the crossbar
  97   1               - P0.3 pin is not skipped by the crossbar
  98   1               - P0.4 pin is not skipped by the crossbar
  99   1               - P0.5 pin is not skipped by the crossbar
 100   1               - P0.6 pin is not skipped by the crossbar
 101   1               - P0.7 pin is not skipped by the crossbar
 102   1               ***********************************************************************/
 103   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__NOT_SKIPPED
 104   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 105   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 106   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 107   1              // [P0SKIP - Port 0 Skip]$
 108   1      
 109   1              // $[P0MASK - Port 0 Mask]
 110   1              // [P0MASK - Port 0 Mask]$
 111   1      
 112   1              // $[P0MAT - Port 0 Match]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 3   

 113   1              // [P0MAT - Port 0 Match]$
 114   1      
 115   1      }
 116          
 117          //================================================================================
 118          // PORTS_1_enter_DefaultMode_from_RESET
 119          //================================================================================
 120          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 121   1              // $[P1 - Port 1 Pin Latch]
 122   1              // [P1 - Port 1 Pin Latch]$
 123   1      
 124   1              // $[P1MDOUT - Port 1 Output Mode]
 125   1              /***********************************************************************
 126   1               - P1.0 output is open-drain
 127   1               - P1.1 output is open-drain
 128   1               - P1.2 output is open-drain
 129   1               - P1.3 output is open-drain
 130   1               - P1.4 output is push-pull
 131   1               - P1.5 output is open-drain
 132   1               - P1.6 output is open-drain
 133   1               - P1.7 output is open-drain
 134   1               ***********************************************************************/
 135   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 136   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 137   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 138   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 139   1              // [P1MDOUT - Port 1 Output Mode]$
 140   1      
 141   1              // $[P1MDIN - Port 1 Input Mode]
 142   1              /***********************************************************************
 143   1               - P1.0 pin is configured for digital mode
 144   1               - P1.1 pin is configured for digital mode
 145   1               - P1.2 pin is configured for digital mode
 146   1               - P1.3 pin is configured for digital mode
 147   1               - P1.4 pin is configured for digital mode
 148   1               - P1.5 pin is configured for digital mode
 149   1               - P1.6 pin is configured for digital mode
 150   1               - P1.7 pin is configured for analog mode
 151   1               ***********************************************************************/
 152   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 153   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 154   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 155   1              // [P1MDIN - Port 1 Input Mode]$
 156   1      
 157   1              // $[P1SKIP - Port 1 Skip]
 158   1              /***********************************************************************
 159   1               - P1.0 pin is not skipped by the crossbar
 160   1               - P1.1 pin is not skipped by the crossbar
 161   1               - P1.2 pin is not skipped by the crossbar
 162   1               - P1.3 pin is not skipped by the crossbar
 163   1               - P1.4 pin is skipped by the crossbar
 164   1               - P1.5 pin is not skipped by the crossbar
 165   1               - P1.6 pin is not skipped by the crossbar
 166   1               - P1.7 pin is skipped by the crossbar
 167   1               ***********************************************************************/
 168   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 169   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 170   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__NOT_SKIPPED
 171   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 172   1              // [P1SKIP - Port 1 Skip]$
 173   1      
 174   1              // $[P1MASK - Port 1 Mask]
 175   1              // [P1MASK - Port 1 Mask]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 4   

 176   1      
 177   1              // $[P1MAT - Port 1 Match]
 178   1              // [P1MAT - Port 1 Match]$
 179   1      
 180   1      }
 181          
 182          //================================================================================
 183          // PBCFG_0_enter_DefaultMode_from_RESET
 184          //================================================================================
 185          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 186   1              // $[XBR2 - Port I/O Crossbar 2]
 187   1              /***********************************************************************
 188   1               - Weak Pullups enabled 
 189   1               - Crossbar enabled
 190   1               ***********************************************************************/
 191   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 192   1              // [XBR2 - Port I/O Crossbar 2]$
 193   1      
 194   1              // $[PRTDRV - Port Drive Strength]
 195   1              // [PRTDRV - Port Drive Strength]$
 196   1      
 197   1              // $[XBR0 - Port I/O Crossbar 0]
 198   1              /***********************************************************************
 199   1               - UART TX, RX routed to Port pins P0.4 and P0.5
 200   1               - SPI I/O unavailable at Port pins
 201   1               - SMBus 0 I/O unavailable at Port pins
 202   1               - CP0 unavailable at Port pin
 203   1               - Asynchronous CP0 unavailable at Port pin
 204   1               - CP1 unavailable at Port pin
 205   1               - Asynchronous CP1 unavailable at Port pin
 206   1               - SYSCLK unavailable at Port pin
 207   1               ***********************************************************************/
 208   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 209   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 210   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 211   1              // [XBR0 - Port I/O Crossbar 0]$
 212   1      
 213   1              // $[XBR1 - Port I/O Crossbar 1]
 214   1              // [XBR1 - Port I/O Crossbar 1]$
 215   1      
 216   1      }
 217          
 218          //================================================================================
 219          // ADC_0_enter_DefaultMode_from_RESET
 220          //================================================================================
 221          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 222   1              // $[ADC0CN1 - ADC0 Control 1]
 223   1              // [ADC0CN1 - ADC0 Control 1]$
 224   1      
 225   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 226   1              /***********************************************************************
 227   1               - Select ADC0.0
 228   1               ***********************************************************************/
 229   1              ADC0MX = ADC0MX_ADC0MX__ADC0P0;
 230   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 231   1      
 232   1              // $[ADC0CF - ADC0 Configuration]
 233   1              /***********************************************************************
 234   1               - SAR Clock Divider = 0x1F
 235   1               - ADC0 operates in 10-bit or 12-bit mode 
 236   1               - The on-chip PGA gain is 1
 237   1               - Normal Track Mode
 238   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 5   

 239   1              ADC0CF = (0x1F << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 240   1                              | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 241   1              // [ADC0CF - ADC0 Configuration]$
 242   1      
 243   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 244   1              /***********************************************************************
 245   1               - Right justified. No shifting applied
 246   1               - Enable 12-bit mode
 247   1               - ADC0H:ADC0L contain the result of the latest conversion when Burst
 248   1               Mode is disabled
 249   1               - Perform and Accumulate 4 conversions 
 250   1               ***********************************************************************/
 251   1              ADC0AC = ADC0AC_ADSJST__RIGHT_NO_SHIFT | ADC0AC_AD12BE__12_BIT_ENABLED
 252   1                              | ADC0AC_ADAE__ACC_DISABLED | ADC0AC_ADRPT__ACC_4;
 253   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 254   1      
 255   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 256   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 257   1      
 258   1              // $[ADC0PWR - ADC0 Power Control]
 259   1              // [ADC0PWR - ADC0 Power Control]$
 260   1      
 261   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 262   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 263   1      
 264   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 265   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 266   1      
 267   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 268   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 269   1      
 270   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 271   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 272   1      
 273   1              // $[ADC0CN0 - ADC0 Control 0]
 274   1              /***********************************************************************
 275   1               - Enable ADC0 
 276   1               - Enable ADC0 burst mode
 277   1               - ADC0 conversion initiated on overflow of Timer 2
 278   1               ***********************************************************************/
 279   1              ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 280   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADBMEN__BURST_ENABLED
 281   1                              | ADC0CN0_ADCM__TIMER2;
 282   1              // [ADC0CN0 - ADC0 Control 0]$
 283   1      
 284   1      }
 285          
 286          //================================================================================
 287          // VREF_0_enter_DefaultMode_from_RESET
 288          //================================================================================
 289          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 290   1              // $[REF0CN - Voltage Reference Control]
 291   1              /***********************************************************************
 292   1               - Disable the Temperature Sensor
 293   1               - The ADC0 ground reference is the GND pin
 294   1               - The internal reference operates at 1.65 V nominal
 295   1               - The ADC0 voltage reference is the VDD pin
 296   1               ***********************************************************************/
 297   1              REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN
 298   1                              | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 299   1              // [REF0CN - Voltage Reference Control]$
 300   1      
 301   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 6   

 302          
 303          //================================================================================
 304          // CLOCK_0_enter_DefaultMode_from_RESET
 305          //================================================================================
 306          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 307   1              // $[CLKSEL - Clock Select]
 308   1              /***********************************************************************
 309   1               - Clock derived from the Internal High-Frequency Oscillator
 310   1               - SYSCLK is equal to selected clock source divided by 1
 311   1               ***********************************************************************/
 312   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 313   1              // [CLKSEL - Clock Select]$
 314   1      
 315   1      }
 316          
 317          //================================================================================
 318          // TIMER01_0_enter_DefaultMode_from_RESET
 319          //================================================================================
 320          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 321   1              // $[Timer Initialization]
 322   1              //Save Timer Configuration
 323   1              uint8_t TCON_save;
 324   1              TCON_save = TCON;
 325   1              //Stop Timers
 326   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 327   1      
 328   1              // [Timer Initialization]$
 329   1      
 330   1              // $[TH0 - Timer 0 High Byte]
 331   1              // [TH0 - Timer 0 High Byte]$
 332   1      
 333   1              // $[TL0 - Timer 0 Low Byte]
 334   1              // [TL0 - Timer 0 Low Byte]$
 335   1      
 336   1              // $[TH1 - Timer 1 High Byte]
 337   1              /***********************************************************************
 338   1               - Timer 1 High Byte = 0x96
 339   1               ***********************************************************************/
 340   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 341   1              // [TH1 - Timer 1 High Byte]$
 342   1      
 343   1              // $[TL1 - Timer 1 Low Byte]
 344   1              // [TL1 - Timer 1 Low Byte]$
 345   1      
 346   1              // $[Timer Restoration]
 347   1              //Restore Timer Configuration
 348   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 349   1      
 350   1              // [Timer Restoration]$
 351   1      
 352   1      }
 353          
 354          //================================================================================
 355          // TIMER16_2_enter_DefaultMode_from_RESET
 356          //================================================================================
 357          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 358   1              // $[Timer Initialization]
 359   1              // Save Timer Configuration
 360   1              uint8_t TMR2CN0_TR2_save;
 361   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 362   1              // Stop Timer
 363   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 364   1              // [Timer Initialization]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 7   

 365   1      
 366   1              // $[TMR2CN0 - Timer 2 Control]
 367   1              // [TMR2CN0 - Timer 2 Control]$
 368   1      
 369   1              // $[TMR2H - Timer 2 High Byte]
 370   1              // [TMR2H - Timer 2 High Byte]$
 371   1      
 372   1              // $[TMR2L - Timer 2 Low Byte]
 373   1              // [TMR2L - Timer 2 Low Byte]$
 374   1      
 375   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 376   1              /***********************************************************************
 377   1               - Timer 2 Reload High Byte = 0xFF
 378   1               ***********************************************************************/
 379   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 380   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 381   1      
 382   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 383   1              /***********************************************************************
 384   1               - Timer 2 Reload Low Byte = 0x34
 385   1               ***********************************************************************/
 386   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 387   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 388   1      
 389   1              // $[TMR2CN0]
 390   1              /***********************************************************************
 391   1               - Start Timer 2 running
 392   1               ***********************************************************************/
 393   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 394   1              // [TMR2CN0]$
 395   1      
 396   1              // $[Timer Restoration]
 397   1              // Restore Timer Configuration
 398   1              TMR2CN0 |= TMR2CN0_TR2_save;
 399   1              // [Timer Restoration]$
 400   1      
 401   1      }
 402          
 403          //================================================================================
 404          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 405          //================================================================================
 406          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 407   1              // $[CKCON0 - Clock Control 0]
 408   1              /***********************************************************************
 409   1               - System clock divided by 12
 410   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 411   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 412   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 413   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 414   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 415   1               - Timer 1 uses the system clock
 416   1               ***********************************************************************/
 417   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 418   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 419   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 420   1                              | CKCON0_T1M__SYSCLK;
 421   1              // [CKCON0 - Clock Control 0]$
 422   1      
 423   1              // $[TMOD - Timer 0/1 Mode]
 424   1              /***********************************************************************
 425   1               - Mode 0, 13-bit Counter/Timer
 426   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 427   1               - Timer Mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 8   

 428   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 429   1               - Timer Mode
 430   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 431   1               ***********************************************************************/
 432   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 433   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 434   1              // [TMOD - Timer 0/1 Mode]$
 435   1      
 436   1              // $[TCON - Timer 0/1 Control]
 437   1              /***********************************************************************
 438   1               - Start Timer 1 running
 439   1               ***********************************************************************/
 440   1              TCON |= TCON_TR1__RUN;
 441   1              // [TCON - Timer 0/1 Control]$
 442   1      
 443   1      }
 444          
 445          //================================================================================
 446          // UART_0_enter_DefaultMode_from_RESET
 447          //================================================================================
 448          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 449   1              // $[SCON0 - UART0 Serial Port Control]
 450   1              /***********************************************************************
 451   1               - UART0 reception enabled
 452   1               ***********************************************************************/
 453   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 454   1              // [SCON0 - UART0 Serial Port Control]$
 455   1      
 456   1      }
 457          
 458          //================================================================================
 459          // INTERRUPT_0_enter_DefaultMode_from_RESET
 460          //================================================================================
 461          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 462   1              // $[EIE1 - Extended Interrupt Enable 1]
 463   1              /***********************************************************************
 464   1               - Enable interrupt requests generated by the ADINT flag
 465   1               - Disable ADC0 Window Comparison interrupt
 466   1               - Disable CP0 interrupts
 467   1               - Disable CP1 interrupts
 468   1               - Disable all Port Match interrupts
 469   1               - Disable all PCA0 interrupts
 470   1               - Disable all SMB0 interrupts
 471   1               - Disable Timer 3 interrupts
 472   1               ***********************************************************************/
 473   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 474   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 475   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 476   1              // [EIE1 - Extended Interrupt Enable 1]$
 477   1      
 478   1              // $[EIP1 - Extended Interrupt Priority 1]
 479   1              // [EIP1 - Extended Interrupt Priority 1]$
 480   1      
 481   1              // $[IE - Interrupt Enable]
 482   1              /***********************************************************************
 483   1               - Enable each interrupt according to its individual mask setting
 484   1               - Disable external interrupt 0
 485   1               - Disable external interrupt 1
 486   1               - Disable all SPI0 interrupts
 487   1               - Disable all Timer 0 interrupt
 488   1               - Disable all Timer 1 interrupt
 489   1               - Disable Timer 2 interrupt
 490   1               - Enable UART0 interrupt
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 17:27:15 PAGE 9   

 491   1               ***********************************************************************/
 492   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 493   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 494   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 495   1              // [IE - Interrupt Enable]$
 496   1      
 497   1              // $[IP - Interrupt Priority]
 498   1              // [IP - Interrupt Priority]$
 499   1      
 500   1      }
 501          
 502          extern void enter_NotSending_from_DefaultMode(void) {
 503   1      
 504   1      }
 505          
 506          extern void PORTS_0_enter_NotSending_from_DefaultMode(void) {
 507   1      
 508   1      }
 509          
 510          extern void PORTS_1_enter_NotSending_from_DefaultMode(void) {
 511   1      
 512   1      }
 513          
 514          extern void PBCFG_0_enter_NotSending_from_DefaultMode(void) {
 515   1      
 516   1      }
 517          
 518          extern void WDT_0_enter_NotSending_from_DefaultMode(void) {
 519   1      
 520   1      }
 521          
 522          extern void INTERRUPT_0_enter_NotSending_from_DefaultMode(void) {
 523   1      
 524   1      }
 525          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
