C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\SiliconLabs\S
                    -implicityStudio\v4\developer\sdks\8051\v4.0.3\examples\EFM8BB1_SLSTK2020A\SPI\Master\src\InitDevice.c OMF2 SMALL DEBUG O
                    -BJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCD
                    -IR(C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\8051\v4.0.3\examples\EFM8BB1_SLSTK2020A\SPI\Master\inc;C:/SiliconLa
                    -bs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer
                    -/sdks/8051/v4.0.3//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitD
                    -evice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              CLOCK_0_enter_DefaultMode_from_RESET();
  29   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  30   1              SPI_0_enter_DefaultMode_from_RESET();
  31   1              UART_0_enter_DefaultMode_from_RESET();
  32   1              // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          //================================================================================
  37          // WDT_0_enter_DefaultMode_from_RESET
  38          //================================================================================
  39          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  40   1              // $[WDTCN - Watchdog Timer Control]
  41   1              //Disable Watchdog with key sequence
  42   1              WDTCN = 0xDE; //First key
  43   1              WDTCN = 0xAD; //Second key
  44   1              // [WDTCN - Watchdog Timer Control]$
  45   1      
  46   1      }
  47          
  48          //================================================================================
  49          // PORTS_0_enter_DefaultMode_from_RESET
  50          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 2   

  51          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  52   1              // $[P0 - Port 0 Pin Latch]
  53   1              // [P0 - Port 0 Pin Latch]$
  54   1      
  55   1              // $[P0MDOUT - Port 0 Output Mode]
  56   1              /***********************************************************************
  57   1               - P0.0 output is push-pull
  58   1               - P0.1 output is open-drain
  59   1               - P0.2 output is open-drain
  60   1               - P0.3 output is open-drain
  61   1               - P0.4 output is push-pull
  62   1               - P0.5 output is open-drain
  63   1               - P0.6 output is push-pull
  64   1               - P0.7 output is open-drain
  65   1               ***********************************************************************/
  66   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  67   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  68   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  69   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  70   1              // [P0MDOUT - Port 0 Output Mode]$
  71   1      
  72   1              // $[P0MDIN - Port 0 Input Mode]
  73   1              // [P0MDIN - Port 0 Input Mode]$
  74   1      
  75   1              // $[P0SKIP - Port 0 Skip]
  76   1              /***********************************************************************
  77   1               - P0.0 pin is skipped by the crossbar
  78   1               - P0.1 pin is skipped by the crossbar
  79   1               - P0.2 pin is skipped by the crossbar
  80   1               - P0.3 pin is skipped by the crossbar
  81   1               - P0.4 pin is not skipped by the crossbar
  82   1               - P0.5 pin is not skipped by the crossbar
  83   1               - P0.6 pin is not skipped by the crossbar
  84   1               - P0.7 pin is not skipped by the crossbar
  85   1               ***********************************************************************/
  86   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  87   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
  88   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
  89   1                              | P0SKIP_B7__NOT_SKIPPED;
  90   1              // [P0SKIP - Port 0 Skip]$
  91   1      
  92   1              // $[P0MASK - Port 0 Mask]
  93   1              // [P0MASK - Port 0 Mask]$
  94   1      
  95   1              // $[P0MAT - Port 0 Match]
  96   1              // [P0MAT - Port 0 Match]$
  97   1      
  98   1      }
  99          
 100          //================================================================================
 101          // PORTS_1_enter_DefaultMode_from_RESET
 102          //================================================================================
 103          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 104   1              // $[P1 - Port 1 Pin Latch]
 105   1              // [P1 - Port 1 Pin Latch]$
 106   1      
 107   1              // $[P1MDOUT - Port 1 Output Mode]
 108   1              /***********************************************************************
 109   1               - P1.0 output is push-pull
 110   1               - P1.1 output is push-pull
 111   1               - P1.2 output is open-drain
 112   1               - P1.3 output is open-drain
 113   1               - P1.4 output is push-pull
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 3   

 114   1               - P1.5 output is open-drain
 115   1               - P1.6 output is open-drain
 116   1               - P1.7 output is open-drain
 117   1               ***********************************************************************/
 118   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 119   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 120   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 121   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 122   1              // [P1MDOUT - Port 1 Output Mode]$
 123   1      
 124   1              // $[P1MDIN - Port 1 Input Mode]
 125   1              // [P1MDIN - Port 1 Input Mode]$
 126   1      
 127   1              // $[P1SKIP - Port 1 Skip]
 128   1              /***********************************************************************
 129   1               - P1.0 pin is not skipped by the crossbar
 130   1               - P1.1 pin is not skipped by the crossbar
 131   1               - P1.2 pin is not skipped by the crossbar
 132   1               - P1.3 pin is not skipped by the crossbar
 133   1               - P1.4 pin is skipped by the crossbar
 134   1               - P1.5 pin is not skipped by the crossbar
 135   1               - P1.6 pin is not skipped by the crossbar
 136   1               - P1.7 pin is not skipped by the crossbar
 137   1               ***********************************************************************/
 138   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 139   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 140   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__NOT_SKIPPED
 141   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 142   1              // [P1SKIP - Port 1 Skip]$
 143   1      
 144   1              // $[P1MASK - Port 1 Mask]
 145   1              // [P1MASK - Port 1 Mask]$
 146   1      
 147   1              // $[P1MAT - Port 1 Match]
 148   1              // [P1MAT - Port 1 Match]$
 149   1      
 150   1      }
 151          
 152          //================================================================================
 153          // PBCFG_0_enter_DefaultMode_from_RESET
 154          //================================================================================
 155          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 156   1              // $[XBR2 - Port I/O Crossbar 2]
 157   1              /***********************************************************************
 158   1               - Weak Pullups enabled 
 159   1               - Crossbar enabled
 160   1               ***********************************************************************/
 161   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 162   1              // [XBR2 - Port I/O Crossbar 2]$
 163   1      
 164   1              // $[PRTDRV - Port Drive Strength]
 165   1              // [PRTDRV - Port Drive Strength]$
 166   1      
 167   1              // $[XBR0 - Port I/O Crossbar 0]
 168   1              /***********************************************************************
 169   1               - UART TX, RX routed to Port pins P0.4 and P0.5
 170   1               - SPI I/O routed to Port pins
 171   1               - SMBus 0 I/O unavailable at Port pins
 172   1               - CP0 unavailable at Port pin
 173   1               - Asynchronous CP0 unavailable at Port pin
 174   1               - CP1 unavailable at Port pin
 175   1               - Asynchronous CP1 unavailable at Port pin
 176   1               - SYSCLK unavailable at Port pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 4   

 177   1               ***********************************************************************/
 178   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 179   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 180   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 181   1              // [XBR0 - Port I/O Crossbar 0]$
 182   1      
 183   1              // $[XBR1 - Port I/O Crossbar 1]
 184   1              // [XBR1 - Port I/O Crossbar 1]$
 185   1      
 186   1      }
 187          
 188          //================================================================================
 189          // CLOCK_0_enter_DefaultMode_from_RESET
 190          //================================================================================
 191          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 192   1              // $[CLKSEL - Clock Select]
 193   1              /***********************************************************************
 194   1               - Clock derived from the Internal High-Frequency Oscillator
 195   1               - SYSCLK is equal to selected clock source divided by 1
 196   1               ***********************************************************************/
 197   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 198   1              // [CLKSEL - Clock Select]$
 199   1      
 200   1      }
 201          
 202          //================================================================================
 203          // SPI_0_enter_DefaultMode_from_RESET
 204          //================================================================================
 205          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 206   1              // $[SPI0CKR - SPI0 Clock Rate]
 207   1              /***********************************************************************
 208   1               - SPI0 Clock Rate = 0x17
 209   1               ***********************************************************************/
 210   1              SPI0CKR = (0x17 << SPI0CKR_SPI0CKR__SHIFT);
 211   1              // [SPI0CKR - SPI0 Clock Rate]$
 212   1      
 213   1              // $[SPI0CFG - SPI0 Configuration]
 214   1              /***********************************************************************
 215   1               - Enable master mode. Operate as a master
 216   1               ***********************************************************************/
 217   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 218   1              // [SPI0CFG - SPI0 Configuration]$
 219   1      
 220   1              // $[SPI0CN0 - SPI0 Control]
 221   1              /***********************************************************************
 222   1               - Enable the SPI module
 223   1               - 4-Wire Single-Master Mode. NSS is an output and logic high
 224   1               ***********************************************************************/
 225   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED | SPI0CN0_NSSMD__4_WIRE_MASTER_NSS_HIGH;
 226   1              // [SPI0CN0 - SPI0 Control]$
 227   1      
 228   1      }
 229          
 230          //================================================================================
 231          // INTERRUPT_0_enter_DefaultMode_from_RESET
 232          //================================================================================
 233          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 234   1              // $[EIE1 - Extended Interrupt Enable 1]
 235   1              // [EIE1 - Extended Interrupt Enable 1]$
 236   1      
 237   1              // $[EIP1 - Extended Interrupt Priority 1]
 238   1              // [EIP1 - Extended Interrupt Priority 1]$
 239   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 5   

 240   1              // $[IE - Interrupt Enable]
 241   1              /***********************************************************************
 242   1               - Enable each interrupt according to its individual mask setting
 243   1               - Disable external interrupt 0
 244   1               - Disable external interrupt 1
 245   1               - Enable interrupt requests generated by SPI0
 246   1               - Disable all Timer 0 interrupt
 247   1               - Disable all Timer 1 interrupt
 248   1               - Disable Timer 2 interrupt
 249   1               - Disable UART0 interrupt
 250   1               ***********************************************************************/
 251   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 252   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 253   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 254   1              // [IE - Interrupt Enable]$
 255   1      
 256   1              // $[IP - Interrupt Priority]
 257   1              // [IP - Interrupt Priority]$
 258   1      
 259   1      }
 260          
 261          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 262   1              // $[CKCON0 - Clock Control 0]
 263   1              /***********************************************************************
 264   1               - System clock divided by 12
 265   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 266   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 267   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 268   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 269   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 270   1               - Timer 1 uses the system clock
 271   1               ***********************************************************************/
 272   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 273   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 274   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 275   1                              | CKCON0_T1M__SYSCLK;
 276   1              // [CKCON0 - Clock Control 0]$
 277   1      
 278   1              // $[TMOD - Timer 0/1 Mode]
 279   1              /***********************************************************************
 280   1               - Mode 0, 13-bit Counter/Timer
 281   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 282   1               - Timer Mode
 283   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 284   1               - Timer Mode
 285   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 286   1               ***********************************************************************/
 287   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 288   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 289   1              // [TMOD - Timer 0/1 Mode]$
 290   1      
 291   1              // $[TCON - Timer 0/1 Control]
 292   1              /***********************************************************************
 293   1               - Start Timer 1 running
 294   1               ***********************************************************************/
 295   1              TCON |= TCON_TR1__RUN;
 296   1              // [TCON - Timer 0/1 Control]$
 297   1      
 298   1      }
 299          
 300          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 301   1      
 302   1              // $[SCON0 - UART0 Serial Port Control]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/12/2017 14:45:26 PAGE 6   

 303   1              /***********************************************************************
 304   1               - UART0 reception enabled
 305   1               ***********************************************************************/
 306   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 307   1              // [SCON0 - UART0 Serial Port Control]$
 308   1      
 309   1      }
 310          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
